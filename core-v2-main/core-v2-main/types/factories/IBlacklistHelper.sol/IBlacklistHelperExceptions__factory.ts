/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBlacklistHelperExceptions,
  IBlacklistHelperExceptionsInterface,
} from "../../IBlacklistHelper.sol/IBlacklistHelperExceptions";

const _abi = [
  {
    inputs: [],
    name: "CreditFacadeNonBlacklistable",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaimException",
    type: "error",
  },
] as const;

export class IBlacklistHelperExceptions__factory {
  static readonly abi = _abi;
  static createInterface(): IBlacklistHelperExceptionsInterface {
    return new utils.Interface(_abi) as IBlacklistHelperExceptionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBlacklistHelperExceptions {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IBlacklistHelperExceptions;
  }
}
