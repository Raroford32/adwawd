/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDegenDistributorEvents,
  IDegenDistributorEventsInterface,
} from "../../IDegenDistributor.sol/IDegenDistributorEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "RootUpdated",
    type: "event",
  },
] as const;

export class IDegenDistributorEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IDegenDistributorEventsInterface {
    return new utils.Interface(_abi) as IDegenDistributorEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDegenDistributorEvents {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IDegenDistributorEvents;
  }
}
