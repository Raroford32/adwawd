/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UniversalAdapter,
  UniversalAdapterInterface,
} from "../UniversalAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct RevocationPair[]",
        name: "revocations",
        type: "tuple[]",
      },
    ],
    name: "revokeAdapterAllowances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b506040516109b13803806109b1833981016040819052610030916101f2565b8073cccccccccccccccccccccccccccccccccccccccc6001600160a01b038216158061006357506001600160a01b038116155b1561008157604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa1580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef91906101f2565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561012c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015091906101f2565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906101f2565b6001600160a01b031660e05250610216915050565b6001600160a01b03811681146101ef57600080fd5b50565b60006020828403121561020457600080fd5b815161020f816101da565b9392505050565b60805160a05160c05160e05161074e61026360003960006101080152600061012f01526000608701526000818161015601528181610382015281816104730152610509015261074e6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a50cf2c81161005b578063a50cf2c814610103578063bd90df701461012a578063c12c21c014610151578063ce30bbdb1461017857600080fd5b80632954018c14610082578063565a820d146100d357806378aa73a4146100e8575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100e66100e13660046105b4565b61018d565b005b6100f0600281565b60405161ffff90911681526020016100ca565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b610180600e81565b6040516100ca9190610629565b61019561046f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f9576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610203610505565b90508160005b818110156104685760008585838181106102255761022561066a565b61023b92602060409092020190810191506106be565b905060008686848181106102515761025161066a565b905060400201602001602081019061026991906106be565b905073ffffffffffffffffffffffffffffffffffffffff821615806102a2575073ffffffffffffffffffffffffffffffffffffffff8116155b156102d9576040517fb2335f2e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015283811660248301526000919083169063dd62ed3e90604401602060405180830381865afa158015610351573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037591906106e2565b9050600181111561045a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d6103c461046f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201528187166024820152908516604482015260016064820152608401600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b505050505b836001019350505050610209565b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050091906106fb565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b70461054b61046f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa1580156104dc573d6000803e3d6000fd5b600080602083850312156105c757600080fd5b823567ffffffffffffffff808211156105df57600080fd5b818501915085601f8301126105f357600080fd5b81358181111561060257600080fd5b8660208260061b850101111561061757600080fd5b60209290920196919550909350505050565b6020810160158310610664577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146106bb57600080fd5b50565b6000602082840312156106d057600080fd5b81356106db81610699565b9392505050565b6000602082840312156106f457600080fd5b5051919050565b60006020828403121561070d57600080fd5b81516106db8161069956fea264697066735822122074529c2e4d3e3abb248b99bf0ecf98fee93285001b3c6874b8311553d2237d7664736f6c634300080a0033";

type UniversalAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniversalAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniversalAdapter__factory extends ContractFactory {
  constructor(...args: UniversalAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniversalAdapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniversalAdapter> {
    return super.deploy(
      _creditManager,
      overrides || {}
    ) as Promise<UniversalAdapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_creditManager, overrides || {});
  }
  override attach(address: string): UniversalAdapter {
    return super.attach(address) as UniversalAdapter;
  }
  override connect(signer: Signer): UniversalAdapter__factory {
    return super.connect(signer) as UniversalAdapter__factory;
  }
  static readonly contractName: "UniversalAdapter";

  public readonly contractName: "UniversalAdapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniversalAdapterInterface {
    return new utils.Interface(_abi) as UniversalAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniversalAdapter {
    return new Contract(address, _abi, signerOrProvider) as UniversalAdapter;
  }
}
