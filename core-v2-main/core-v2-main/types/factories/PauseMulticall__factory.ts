/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PauseMulticall,
  PauseMulticallInterface,
} from "../PauseMulticall";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acl",
    outputs: [
      {
        internalType: "contract ACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cr",
    outputs: [
      {
        internalType: "contract ContractsRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAllContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAllCreditManagers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseAllPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610e17380380610e1783398101604081905261002f916101d3565b6000805460ff19169055806001600160a01b03811661006157604051635919af9760e11b815260040160405180910390fd5b806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa15801561009f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c391906101d3565b6001600160a01b03166080816001600160a01b031681525050506000819050806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa158015610120573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014491906101d3565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b031663c513c9bb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561019b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bf91906101d3565b6001600160a01b031660c052506102039050565b6000602082840312156101e557600080fd5b81516001600160a01b03811681146101fc57600080fd5b9392505050565b60805160a05160c051610bae6102696000396000818160da0152818161035e015281816104fb015261064d015260008181610165015281816102a301528181610440015261059201526000818161013e015281816101b501526106e40152610bae6000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80636f074436116100765780638456cb591161005b5780638456cb5914610131578063a50cf2c814610139578063de2873591461016057600080fd5b80636f074436146101215780637c205cc41461012957600080fd5b80633f4ba83a146100a8578063488bf5b4146100b25780635c975abb146100ba57806362eb33e3146100d5575b600080fd5b6100b0610187565b005b6100b0610275565b60005460ff1660405190151581526020015b60405180910390f35b6100fc7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cc565b6100b0610412565b6100b0610564565b6100b06106b6565b6100fc7f000000000000000000000000000000000000000000000000000000000000000081565b6100fc7f000000000000000000000000000000000000000000000000000000000000000081565b6040517fd4eb5db00000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d4eb5db090602401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023591906109e5565b61026b576040517f10332dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102736107a2565b565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032391906109e5565b610359576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102737f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663673a2a1f6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261040d9190810190610a66565b61081f565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c091906109e5565b6104f6576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102737f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663941448566040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103c7573d6000803e3d6000fd5b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061291906109e5565b610648576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104f67f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663673a2a1f6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103c7573d6000803e3d6000fd5b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076491906109e5565b61079a576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102736108ac565b6107aa610907565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b805160005b818110156108a75782818151811061083e5761083e610b49565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561088d57600080fd5b505af192505050801561089e575060015b50600101610824565b505050565b6108b4610978565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107f53390565b60005460ff16610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064015b60405180910390fd5b60005460ff1615610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161096f565b6000602082840312156109f757600080fd5b81518015158114610a0757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805173ffffffffffffffffffffffffffffffffffffffff81168114610a6157600080fd5b919050565b60006020808385031215610a7957600080fd5b825167ffffffffffffffff80821115610a9157600080fd5b818501915085601f830112610aa557600080fd5b815181811115610ab757610ab7610a0e565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610afa57610afa610a0e565b604052918252848201925083810185019188831115610b1857600080fd5b938501935b82851015610b3d57610b2e85610a3d565b84529385019392850192610b1d565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207b8e63dc9c41997a21766b74b190c389ef16e346e365a53bd4604f61132106d164736f6c634300080a0033";

type PauseMulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PauseMulticallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PauseMulticall__factory extends ContractFactory {
  constructor(...args: PauseMulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PauseMulticall";
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PauseMulticall> {
    return super.deploy(
      _addressProvider,
      overrides || {}
    ) as Promise<PauseMulticall>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_addressProvider, overrides || {});
  }
  override attach(address: string): PauseMulticall {
    return super.attach(address) as PauseMulticall;
  }
  override connect(signer: Signer): PauseMulticall__factory {
    return super.connect(signer) as PauseMulticall__factory;
  }
  static readonly contractName: "PauseMulticall";

  public readonly contractName: "PauseMulticall";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PauseMulticallInterface {
    return new utils.Interface(_abi) as PauseMulticallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PauseMulticall {
    return new Contract(address, _abi, signerOrProvider) as PauseMulticall;
  }
}
