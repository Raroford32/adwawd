/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CompositePriceFeed,
  CompositePriceFeedInterface,
} from "../CompositePriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_targetToBasePriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToUsdPriceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ChainPriceStaleException",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedException",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceOracleNotExistsException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroPriceException",
    type: "error",
  },
  {
    inputs: [],
    name: "answerDenominator",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToUsdPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeedType",
    outputs: [
      {
        internalType: "enum PriceFeedType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "skipPriceCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetToBasePriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162000e8338038062000e838339810160408190526200003591620002a1565b6001600160a01b03808316608081905290821660a05260408051633942720b60e11b81529051637284e416916004808201926000929091908290030181865afa15801562000087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b1919081019062000322565b604051602001620000c39190620003da565b60405160208183030381529060405260009080519060200190620000e9929190620001de565b5060a0516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200012b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000151919062000411565b60ff1660c08160ff16815250506080516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200019f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c5919062000411565b620001d290600a62000552565b60e05250620005a09050565b828054620001ec9062000563565b90600052602060002090601f0160209004810192826200021057600085556200025b565b82601f106200022b57805160ff19168380011785556200025b565b828001600101855582156200025b579182015b828111156200025b5782518255916020019190600101906200023e565b50620002699291506200026d565b5090565b5b808211156200026957600081556001016200026e565b80516001600160a01b03811681146200029c57600080fd5b919050565b60008060408385031215620002b557600080fd5b620002c08362000284565b9150620002d06020840162000284565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200030c578181015183820152602001620002f2565b838111156200031c576000848401525b50505050565b6000602082840312156200033557600080fd5b81516001600160401b03808211156200034d57600080fd5b818401915084601f8301126200036257600080fd5b815181811115620003775762000377620002d9565b604051601f8201601f19908116603f01168101908382118183101715620003a257620003a2620002d9565b81604052828152876020848701011115620003bc57600080fd5b620003cf836020830160208801620002ef565b979650505050505050565b60008251620003ee818460208701620002ef565b7020746f2055534420436f6d706f7369746560781b920191825250601101919050565b6000602082840312156200042457600080fd5b815160ff811681146200043657600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004945781600019048211156200047857620004786200043d565b808516156200048657918102915b93841c939080029062000458565b509250929050565b600082620004ad575060016200054c565b81620004bc575060006200054c565b8160018114620004d55760028114620004e05762000500565b60019150506200054c565b60ff841115620004f457620004f46200043d565b50506001821b6200054c565b5060208310610133831016604e8410600b841016171562000525575081810a6200054c565b62000531838362000453565b80600019048211156200054857620005486200043d565b0290505b92915050565b60006200043660ff8416836200049c565b600181811c908216806200057857607f821691505b602082108114156200059a57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610895620005ee6000396000818160c8015261046a0152600061010201526000818161015001526103c3015260008181610203015261031e01526108956000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80637284e41611610076578063a76d54471161005b578063a76d5447146101fe578063d62ada1114610225578063feaf968c1461023d57600080fd5b80637284e4161461019f5780639a6fc8f5146101b457600080fd5b80633fd0875f116100a75780633fd0875f1461013657806351a799d61461014b57806354fd4d501461019757600080fd5b806325d23b83146100c3578063313ce567146100fd575b600080fd5b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101247f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f4565b61013e600881565b6040516100f49190610546565b6101727f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f4565b6100ea600181565b6101a7610245565b6040516100f49190610587565b6101c76101c2366004610615565b6102d3565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100f4565b6101727f000000000000000000000000000000000000000000000000000000000000000081565b61022d600181565b60405190151581526020016100f4565b6101c761030d565b6000805461025290610639565b80601f016020809104026020016040519081016040528092919081815260200182805461027e90610639565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b505050505081565b60008060008060006040517f24e46f7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000806000806000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab919061068d565b945094509450945094506103c1858584846104ab565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610450919061068d565b939d50919b509950975095506104688a8a89896104ab565b7f00000000000000000000000000000000000000000000000000000000000000006104938a86610714565b61049d91906107d0565b985050505050509091929394565b600083136104e5576040517f56e05d2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff161080610509575081155b15610540576040517fb1cf675500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60208101600e8310610581577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600060208083528351808285015260005b818110156105b457858101830151858201604001528201610598565b818111156105c6576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b69ffffffffffffffffffff8116811461061257600080fd5b50565b60006020828403121561062757600080fd5b8135610632816105fa565b9392505050565b600181811c9082168061064d57607f821691505b60208210811415610687577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080600080600060a086880312156106a557600080fd5b85516106b0816105fa565b8095505060208601519350604086015192506060860151915060808601516106d7816105fa565b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600084136000841385830485118282161615610755576107556106e5565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615610790576107906106e5565b600087129250878205871284841616156107ac576107ac6106e5565b878505871281841616156107c2576107c26106e5565b505050929093029392505050565b600082610806577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f80000000000000000000000000000000000000000000000000000000000000008314161561085a5761085a6106e5565b50059056fea264697066735822122029ce474327fe52a051676d6ef1545bc088872c78d773f894316f49baaca3e0f064736f6c634300080a0033";

type CompositePriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompositePriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompositePriceFeed__factory extends ContractFactory {
  constructor(...args: CompositePriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CompositePriceFeed";
  }

  override deploy(
    _targetToBasePriceFeed: PromiseOrValue<string>,
    _baseToUsdPriceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompositePriceFeed> {
    return super.deploy(
      _targetToBasePriceFeed,
      _baseToUsdPriceFeed,
      overrides || {}
    ) as Promise<CompositePriceFeed>;
  }
  override getDeployTransaction(
    _targetToBasePriceFeed: PromiseOrValue<string>,
    _baseToUsdPriceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _targetToBasePriceFeed,
      _baseToUsdPriceFeed,
      overrides || {}
    );
  }
  override attach(address: string): CompositePriceFeed {
    return super.attach(address) as CompositePriceFeed;
  }
  override connect(signer: Signer): CompositePriceFeed__factory {
    return super.connect(signer) as CompositePriceFeed__factory;
  }
  static readonly contractName: "CompositePriceFeed";

  public readonly contractName: "CompositePriceFeed";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompositePriceFeedInterface {
    return new utils.Interface(_abi) as CompositePriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompositePriceFeed {
    return new Contract(address, _abi, signerOrProvider) as CompositePriceFeed;
  }
}
